{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 (\
\cf3 var\cf2 	joystickControlSetArray, tiltControlSet, zoomSliderControlSet;\
\cf3 var\cf2 	window;\
\cf3 var\cf2 	horizontalDivider, verticalDivider;\
\cf3 var\cf2 	labelsArraySpec, labels; \
\cf3 var\cf2 	modulationSlidersArraySpec, modulationSliders; \
\cf3 var\cf2 	parameterSlidersArraySpec, parameterSliders;\
\cf3 var\cf2 	joysticksArraySpec, joysticks;\
\cf3 var\cf2 	tiltButtonLeft, tiltButtonCenter, tiltButtonRight;\
\cf3 var\cf2 	presetButtonArray, presetInterpolator, presetsController;\
\
joystickControlSetArray = \cf3 Array\cf2 .fill(8, \{ \cf3 ControlSet\cf2 .new; \}); \
tiltControlSet = \cf3 ControlSet\cf2 .new;\
zoomSliderControlSet = \cf3 ControlSet\cf2 .new; \cf4 // initially empty (for Preset)\cf2 \
\
window = \cf3 SCWindow\cf2 .new(\cf5 "< Controller >"\cf2 , \cf3 Rect\cf2 .new(0, 0, 1245, 315), \cf3 false\cf2 , \cf3 true\cf2 );\
\cf4 //window.view.background = HiliteGradient.new(Color.new255(69, 166, 247), Color.new255(0, 82, 155), \\h, 2048, 0.5);\cf2 \
horizontalDivider = \cf3 SCStaticText\cf2 .new(window, \cf3 Rect\cf2 .new(5, 5 + (25 * 12), 1235, 5)); \
horizontalDivider.background = \cf3 HiliteGradient\cf2 .new(\cf3 Color\cf2 .clear, \cf3 Color\cf2 .black, \cf6 \\h\cf2 , 2048, 0.5);\
verticalDivider = \cf3 SCStaticText\cf2 .new(window, \cf3 Rect\cf2 .new(620, 5 + (25 * 2), 5, 255)); \
verticalDivider.background = \cf3 HiliteGradient\cf2 .new(\cf3 Color\cf2 .clear, \cf3 Color\cf2 .black, \cf6 \\v\cf2 , 1024, 1);\
labelsArraySpec = [\
	[\cf3 Rect\cf2 .new(5, 5 + (25 * 1), 130, 20), \cf5 "modulation source"\cf2 ],\
	[\cf3 Rect\cf2 .new(190, 5 + (25 * 1), 20, 20), \cf5 "x/y"\cf2 ], \
	[\cf3 Rect\cf2 .new(280, 5 + (25 * 1), 200, 20), \cf5 "modulation amount"\cf2 ], \
	[\cf3 Rect\cf2 .new(550, 5 + (25 * 1), 145, 20), \cf5 "current"\cf2 ], \
	[\cf3 Rect\cf2 .new(765, 5 + (25 * 1), 200, 20), \cf5 "parameters"\cf2 ],\
	[\cf3 Rect\cf2 .new(1035, 5 + (25 * 1), 20, 20), \cf5 "x/y"\cf2 ],  \
	[\cf3 Rect\cf2 .new(1110, 5 + (25 * 1), 130, 20), \cf5 "options"\cf2 ]\
];\
labels = labelsArraySpec.collect(\{ \cf3 arg\cf2  each; \
	\cf3 SCStaticText\cf2 .new(window, each[0])\
	.string_(each[1])\
	.font_(\cf3 Font\cf2 .new(\cf5 "Helvetica"\cf2 , 12))  					.align_(\cf6 \\center\cf2 )\
	.stringColor_(\cf3 Color\cf2 .black.alpha_(0.7));\
\});\
\
modulationSlidersArraySpec = [\
	[\cf5 "soundfile"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "density"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "duration"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "pitch"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "scan time"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "scan point"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "space"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "filter"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "resonance"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "amplitude"\cf2 , 0, 100, 0, 100, \cf6 \\exp\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet]\
];\
\
modulationSliders = modulationSlidersArraySpec.collect(\{ \cf3 arg\cf2  e, i;\
	\cf3 ModulationSlider\cf2 .new(window, e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9]);\
\});\
\
modulationSliders.do(\{ \cf3 arg\cf2  each, i; \
	zoomSliderControlSet.add(each);\
	each.draw(5, 5 + (25 * (i + 2)), 20, 5, 200, 60, 20, 80); \
\});\
	\
parameterSlidersArraySpec = [\
	[\cf5 "soundfile"\cf2 , 1, 128, 1, 128, \cf6 \\lin\cf2 , 1, 1, \cf5 "# "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "density"\cf2 , 0.1, 1000, 0.1, 1000, \cf6 \\exp\cf2 , 0.1, 10, \cf5 "/s "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "duration"\cf2 , 1, 10000, 1, 10000, \cf6 \\exp\cf2 , 1, 100, \cf5 "ms "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "pitch"\cf2 , -48, 24, -48, 24, \cf6 \\sin\cf2 , 0.01, 0, \cf5 "ht "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "scan time"\cf2 , 0.1, 400, 0.1, 400, \cf6 \\exp\cf2 , 0.1, 100, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "scan point"\cf2 , 0, 100, 0, 100, \cf6 \\lin\cf2 , 0.01, 0, \cf5 "% "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "space"\cf2 , -180, 180, -180, 180, \cf6 \\lin\cf2 , 0.1, 0, 161.asAscii.asString ++ \cf5 " "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "filter"\cf2 , 60, 18000, 60, 18000, \cf6 \\exp\cf2 , 1, 2000, \cf5 "Hz "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "resonance"\cf2 , 0.5, 1000, 0.5, 1000, \cf6 \\exp\cf2 , 0.1, 1, \cf5 "Q "\cf2 , joystickControlSetArray, tiltControlSet],\
	[\cf5 "amplitude"\cf2 , 0.001.ampdb, 1.ampdb, 0.001.ampdb, 1.ampdb, \cf6 \\sin\cf2 , 0.1, 1.ampdb, \cf5 "dB "\cf2 , joystickControlSetArray, tiltControlSet]\
];\
\
parameterSliders = parameterSlidersArraySpec.collect(\{ \cf3 arg\cf2  e, i;\
	\cf3 ParameterSlider\cf2 .new(window, e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9]);\
\});\
\
parameterSliders.do(\{ \cf3 arg\cf2  each, i; \
	zoomSliderControlSet.add(each);\
	each.draw(635, 5 + (25 * (i + 2)), 20, 5, 200, 60, 20); \
\});\
\cf4 /*\
joysticksArraySpec = [\
	["Joystick 1", Color.red.alpha_(0.3), joystickControlSetArray[0], joystickControlSetArray[1]],\
	["Joystick 2", Color.yellow.alpha_(0.3), joystickControlSetArray[2], joystickControlSetArray[3]],\
	["Joystick 3", Color.green.alpha_(0.3), joystickControlSetArray[4], joystickControlSetArray[5]],\
	["Joystick 4", Color.blue.alpha_(0.3), joystickControlSetArray[6], joystickControlSetArray[7]]\
];\
\
joysticks = joysticksArraySpec.collect(\{ arg each, i;\
	var	jw;\
	jw = SCWindow.new(each[0], Rect.new(0 + (240 * i), 365, 235, 160), true, true).front;\
	Joystick.new(jw, "", each[1], each[2], each[3]);\
\}); \
\
joysticks.do(\{ arg each; each.draw(5, 5, 200, 125, true); \});\
\
tiltButtonLeft = TiltButton.new(window, "TILT", \\left, Tilt.new(tiltControlSet));\
tiltButtonCenter = TiltButton.new(window, "TILT", \\center, Tilt.new(tiltControlSet));\
tiltButtonRight = TiltButton.new(window, "TILT", \\right, Tilt.new(tiltControlSet));  \
\
[tiltButtonLeft, tiltButtonCenter, tiltButtonRight].do(\{ arg each, i;\
	each.draw([5, 600, 1195].at(i), 5, 40, 20);\
\});\
\
presetButtonArray = Array.fill(20, \{ arg i; PresetButton.new(window, (i + 1).asString, Preset.new(zoomSliderControlSet)) \});\
presetButtonArray.do(\{ arg each, i; each.draw(422 + (20 * i), 5 + (25 * 1), 20, 20); \});\
\
presetInterpolator = PresetInterpolator.new(presetButtonArray);\
\
presetsController = PresetsController.new(window, "presetsController", presetButtonArray, presetInterpolator);\
presetsController.drawCtrlButtons(145, 525, 20, 0, 20);\
presetsController.drawModeButtons(45, 525, 20, 0, 30);\
presetsController.drawCurveButtons(215, 525, 20, 0, 30);\
presetsController.drawStatusLabel(30, 555, 40, 20);\
presetsController.drawTimeZoomSlider(45, 590, \\h, 20, 5, 170, 40, \\right);\
presetsController.drawTimeRangeSlider(75, 565, 200, 5);\
*/\cf2 \
window.front;\
)\
\
\cf4 ///////////////////////////////////////////////////////////////////////////////}